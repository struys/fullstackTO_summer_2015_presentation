<!doctype html>
<html>
    <head>
        <link href="//fonts.googleapis.com/css?family=Source+Sans+Pro:400,700" rel="stylesheet" type="text/css">
        <link rel="stylesheet" href="bower_components/reveal.js/css/reveal.min.css">
        <link rel="stylesheet" href="bower_components/highlightjs/styles/idea.css">
        <link rel="stylesheet" href="assets/pre_commit_reveal.css">
        <link rel="stylesheet" href="assets/presentation.css">

        <!-- If the query includes 'print-pdf', use the PDF print sheet -->
        <script>
            document.write( '<link rel="stylesheet" href="bower_components/reveal.js/css/print/' + ( window.location.search.match( /print-pdf/gi ) ? 'pdf' : 'paper' ) + '.css" type="text/css" media="print">' );
        </script>
    </head>

    <body>
        <div class="reveal">
            <div class="slides">
                <section>
                    <img src="assets/pre-commit-darwin.png" style="float: left">
                    <h2 style="margin-top: 10%">pre-commit</h2>
                    <p>@kenstruys</p>
                </section>
                <section>
                    <h2>Hi I'm Ken</h2>
                    <ul>
                        <li>Yelp Engineer (~ 4 years)</li>
                        <li>Manager of Webcore</li>
                        <li>From Toronto</li>
                    </ul>
                </section>
                <section>
                    <h3>Let's talk beyond pre-commit</h3>
                    <ul>
                        <li>Modern SE Process</li>
                        <li>How pre-commit works</li>
                        <li>Tackling Debt</li>
                    </ul>
                </section>
                <section>
                    <h3>Cycle For A Website</h3>
                    <ul>
                        <li class="fragment">The faster to production the better</li>
                        <div class="fragment">
                        <li>Still want to write quality code</li>
                        <ul>
                            <li>Design, Code, Build/Test</li>
                            <li>Review</li>
                            <li>Deploy, Merge</li>
                            <li>Repeat</li>
                        </ul>
                        </div>
                    </ul>
                </section>
                <section>
                    <h3>Feature Toggles</h3>
                    <div class="fragment">
                    <p>Deploy works still in progress</p>
                    <pre><code>
    if(gets_new_design(user_id)) {
        render_new_design()
    } else {
        render_old_design()
    }
                    </code></pre>
                    </div>
                </section>
                <section>
                    <h3>Feature Toggles</h3>
                    <ul>
                        <li class="fragment">Team works off master</li>
                        <li class="fragment">Avoids merge conflicts</li>
                        <li class="fragment">Allows slow rollout</li>
                        <li class="fragment">No time/need for manual QA</li>
                    </ul>
                </section>
                <section>
                    <h2>Test, Deploy, Merge is fast</h2>
                    <p>everything else is slow</p>
                </section>
                <section>
                    <h2>Code Reviews</h2>
                </section>
                <section>
                    <h2>Code Review are expensive</h2>
                    <ul>
                        <li>Lots of companies don't do them</li>
                        <li>At Yelp, nothing goes to prod without a review</li>
                        <li>It’s an art, need to educate devs</li>
                    </ul>
                </section>
                <section>
                    <h2>Reviews don't catch everything</h2>
                    <pre><code>
    var x= {
        z:'foo',
        y: function ()
        {
            return
                'What could be better about this JavaScript?';
        },
    };

</code></pre>
                </section>
                <section>
                    <h3>But they're so useful</h3>
                    <ul>
                        <li>Ensure Good Long Term Design</li>
                        <li>Prevent Regressions and Spot Bugs</li>
                        <li>Share Knowledge About Code</li>
                        <li class="fragment">... Make sure whitespace is consistent</li>
                    </ul>
                </section>
                <section>
                    <h2>Not All Comments Created Equal</h2>
                    <p>Lots of Feedback != Good Review</p>
                </section>
                <section>
                    <h2>Focus on what affects your business</h2>
                    <ul>
                        <li>Find The Bugs/Missing Tests</li>
                        <li>Discuss Long Term Design</li>
                        <li>Share Knowledge</li>
                    </ul>
                </section>
                <section>
                    <h2>Too Often in Reviews</h2>
                    <ul>
                        <li>The indentation is off</li>
                        <li>Your imports are out of order</li>
                        <li>Remove this debug statement</li>
                        <li>You’re missing a semicolon</li>
                        <li>This list should be alphabetical</li>
                        <li>Please review our styleguide</li>
                    </ul>
                </section>
                <section>
                    <h2>Cause It's Important!</h2>
                    <img style="width:300%;"src="assets/TabsSpacesBoth.png">
                </section>
                <section>
                    <h2>Code Styleguides</h2>
                    <p>A step in the correct but manual direction</p>
                    <img src="assets/styleguide.png">
                </section>
                <section>
                    <h2>Code Styleguides</h2>
                    <p>Eventually people stop reading</p>
                    <img style="height:500px" src="assets/styleguide_toc.png">
                </section>
                <section>
                    <h2>First To Automate Wins</h2>
                    <p>until someone automates better</p>
                </section>
                <section>
                    <h2>Use Tools that Exist</h2>
                    <ul>
                        <li>
                            Linters
                            <ul>
                                <li>jshint, scss-lint, flake8</li>
                            </ul>
                        </li>
                        <li>
                            Fixers
                            <ul>
                                <li>fixmyjs, autopep8, whitespace-fixer</li>
                            </ul>
                        </li>
                        <li>
                            Git Hooks
                        </li>
                    </ul>
                </section>
                <section>
                    <h2>Git hooks</h2>
                    <code>$ cat pre-commit.sh > .git/hooks/pre-commit</code>
                </section>
                <section>
                    <h2>Example</h2>
                    <pre><code>ignorejshint=$(git config hooks.ignorejshint)
if [ "$ignorejshint" != "true" ] && which jshint >/dev/null; then
    echo "Checking JSHint..."
    # Run jshint on all touched .js files
    jshintissues=0
    for file in $(exec git diff --staged --name-only | grep '\.js$'); do
    if [[ -e "$file" && ! -h "$file" ]] && ! jshint "$file"; then
        jshintissues=1
    fi
    done

    if [ $jshintissues == 1 ]; then
        echo "JShint reported issues."
        exit 1
    fi
fi</code></pre>
                </section>
                <section>
                    <h2>Problems</h2>
                    <ul>
                        <li>Eventually a giant bash script</li>
                        <li>System level dependencies</li>
                        <li>Probably a single language</li>
                        <li>Not shared across projects</li>
                    </ul>
                </section>
                <section>
                    <h2>pre-commit</h2>
                    <p>A Package Manager for Multi-Language Pre-commit Hooks</p>
                </section>
                <section>
                    <h2>Installation</h2>
                    <code style="font-size: 1.5em;">$ pip install pre-commit</code><br>
                    <br>or<br><br>
                    <code style="font-size: 1.5em;">$ curl ... | python</code>
                </section>
                <section>
                    <h2>Package Management</h2>
                    <p>Commit <code>.pre-commit-config.yaml</code></p>

<pre><code class="no-highlight">-   repo: git@github.com:pre-commit/pre-commit-hooks
    sha: v0.4.1
    hooks:
    -   id: trailing-whitespace
    -   id: double-quote-string-fixer
    -   id: debug-statements
-   repo: git@github.com:pre-commit/mirrors-jshint
    sha: e86225836aadd058036f47a6de9b0ee0440476eb
    hooks:
    -   id: jshint
</code></pre>
                </section>
                <section>
                    <h2>On Commit Pre-commit</h2>
                    <code>$ pre-commit run</code><br><br>
                    <ul>
                        <li>Download and installs hooks (including the interpreter!)</li>
                        <li>Runs hooks on staged files that apply</li>
                        <li>Stops commit if fixer fixed or a linter failed</li>
                    </ul>
                </section>
                <section>
                    <h2>Demo!</h2>
                </section>
                <section>
                    <h2>Transitioning to pre-commit</h2>
                    <ul>
                        <li>Change a file, fix the issues</li>
                        <li>Fixed by someone who knows the code</li>
                        <li>Overtime everything is fixed</li>
                    </ul>
                </section>
                <section>
                    <h2>Features</h2>
                    <ul>
                        <li>Python, JavaScript, Ruby</li>
                        <li>Fully featured cli</li>
                        <li>Easy to add open source linters/fixers</li>
                        <li>Easy to integrate into closed/open source</li>
                    </ul>
                </section>
                <section>
                    <h2>We need contributions</h2>
                    <ul>
                        <li>More Language Support</li>
                        <li>More Parsers</li>
                        <li>Useful Fixers</li>
                    </ul>
                </section>
                <section>
                    <h2>Tradeoffs</h2>
                    <ul>
                        <li>Fixer are the best but are often really simple</li>
                        <li>Linters are good but slow you down</li>
                        <li>Sometimes you don't want to block</li>
                    </ul>
                </section>
                <section>
                    <h2>If you want to fix something, you should track progress</h2>
                </section>
                <section>
                    <h2>git-code-debt</h2>
                    <p>Metrics for codebase debt</p>
                </section>
                <section>
                    <h2>Developers create a metric</h2>
                <pre><code>
    from git_code_debt.metrics.base import SimpleLineCounterBase


    class Python__init__LineCount(SimpleLineCounterBase):

        def should_include_file(self, file_diff_stat):
            return file_diff_stat.filename == b'__init__.py'

        def line_matches_metric(self, line, file_diff_stat):
            # All lines in __init__.py match
            return True
                </code></pre>
                </section>
                <section>
                    <h2>Batch Processing</h2>
                    <code>$ git-code-debt-create-tables database.db</code><br>
                    <code>$ git-code-debt-generate &lt;repo&gt; database.db</code>
                </section>
                <section>
                    <h2>Code Debt Site</h2>
                    <code>$ git-code-debt-server database.db</code>
                </section>
                <section><h2>demo!</h2></section>
                <section>
                    <h2>Interesting Trends</h2>
                    <ul>
                        <li>Systems we dislike don’t disappear over night</li>
                        <li>Good lesson for engineers</li>
                        <li>Gets engineers excited about removing debt</li>
                    </ul>
                </section>
                <section>
                    <img src="assets/pre-commit-darwin.png" style="float: left;">
                    <h2>Thanks!</h2>
                    <ul>
                        <li><a href="http://pre-commit.com">pre-commit.com</a></li>
                        <li><a href="https://github.com/Yelp/git-code-debt">github.com/Yelp/git-code-debt</a></li>
                        <li><a href="http://yelp.com/careers">yelp.com/careers</a></li>
                    </ul>
                </section>
            </div>
        </div>

        <script src="bower_components/jquery/jquery.min.js"></script>
        <script src="bower_components/reveal.js/js/reveal.min.js"></script>
        <script src="bower_components/highlightjs/highlight.pack.js"></script>
        <script type="text/javascript">
            Reveal.initialize({
                history: true,
                transition: 'linear',
                keyboard: {
                    39: 'next',
                    37: 'prev'
                }
            });
            hljs.initHighlightingOnLoad();
        </script>
    </body>

</html>
